pipeline {
                agent any
                stages {
                    stage('Git Progress') {
            steps {
                git  branch: 'main', credentialsId: 'github_cred', url: 'https://github.com/Shin9184/mvn_test.git'
            }
        }
	
        stage('Maven Build') {
            steps {
                sh 'chmod +x ./mvnw'
                sh './mvnw -B -DskipTests clean package'
            }
        }
        stage('Maven Junit Test') {
            steps {
                sh 'chmod +x ./mvnw'
                sh './mvnw test -Dmaven.test.failure.ignore=true'
            }
        }
	
            stage('Jacoco') {
                steps {
                    jacoco execPattern: 'target/**.exec', runAlways: true
                }
            }
	
            stage('SonarQube analysis') {
                steps {
                    script {
                        withSonarQubeEnv() {
                            sh "./mvnw sonar:sonar"
                        }
                    }
                }
            }
	stage('Snyk Test') {
            steps {
                snykSecurity(
                    failOnIssues: false,
                    snykInstallation: 'snyk',
                    snykTokenId: 'snyk_cred'
                )
            }
        }
	
        stage('ECR Push image') {
            steps {
                script {
                    checkout scm
                    docker.withRegistry('https://479080306347.dkr.ecr.ap-northeast-2.amazonaws.com', 'ecr:ap-northeast-2:aws_cred') {
                        def customImage = docker.build("479080306347.dkr.ecr.ap-northeast-2.amazonaws.com/dongsu101")
                        customImage.push("${env.BUILD_ID}")
                        customImage.push("latest")
                    }
                }
            }
        }
	
            stage ('Anchore test') {
                steps {
                    script {
                        sh 'anchore-cli --url http://13.209.98.132:8228/v1 --u admin --p foobar registry add 479080306347.dkr.ecr.ap-northeast-2.amazonaws.com/dongsu101 AKIAW7C3JK2V2AEBBIIZ q6PezOgrQ+w929KuFNM1/DCFnH0azBrBZx0FZczA --registry-type=awsecr'
                        sh 'anchore-cli --url http://13.209.98.132:8228/v1 --u admin --p foobar image add 479080306347.dkr.ecr.ap-northeast-2.amazonaws.com/dongsu101'

                        def imageLine = '479080306347.dkr.ecr.ap-northeast-2.amazonaws.com/dongsu101'
                        writeFile file: '479080306347.dkr.ecr.ap-northeast-2.amazonaws.com/dongsu101', text: imageLine
                        anchore name: '479080306347.dkr.ecr.ap-northeast-2.amazonaws.com/dongsu101', engineCredentialsId: 'anchore_cred', bailOnFail: false
                    }
                }
            }
	
            stage('Trivy Image Scan') {
                steps {
                    sh 'aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin 479080306347.dkr.ecr.ap-northeast-2.amazonaws.com'
                    sh 'trivy image 479080306347.dkr.ecr.ap-northeast-2.amazonaws.com/dongsu101 > trivy.txt'
                }
            }
                }
            }